{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\ncreateSlice();\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type === 'increment'){\n//         return{\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if(action.type === 'increase'){\n//         return{\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if(action.type === 'decrement'){\n//         return{\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if(action.type === 'toggle'){\n//         return{\n//             showCounter: !state.showCounter,\n//             counter: state.counter\n//         }\n//     }\n\n//     return state;\n// }\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer","counterActions","actions"],"sources":["/Users/dzemilkarisik/Desktop/React/15-reduxCore-project/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialCounterState = { counter: 0, showCounter: true };\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: initialCounterState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        }\n    }\n});\n\ncreateSlice()\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type === 'increment'){\n//         return{\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if(action.type === 'increase'){\n//         return{\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if(action.type === 'decrement'){\n//         return{\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if(action.type === 'toggle'){\n//         return{\n//             showCounter: !state.showCounter,\n//             counter: state.counter\n//         }\n//     }\n\n//     return state;\n// }\n\nconst store = configureStore({\n    reducer: counterSlice.reducer\n});\n\nexport const counterActions = counterSlice.actions;\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAE7D,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MACbA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAE;MACbA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACpBH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACjBA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;AAEFJ,WAAW,CAAC,CAAC;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAMgB,KAAK,GAAGf,cAAc,CAAC;EACzBgB,OAAO,EAAEZ,YAAY,CAACY;AAC1B,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGb,YAAY,CAACc,OAAO;AAElD,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}