{"ast":null,"code":"var _jsxFileName = \"/Users/dzemilkarisik/Desktop/React/18-router-practice/frontend/src/pages/EventDetail.jsx\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EventDetail() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetail, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetail;\nexport async function loader({\n  reques,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    }));\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["useLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetail","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","reques","params","id","eventId","response","fetch","ok","Response","JSON","stringify","message","status","$RefreshReg$"],"sources":["/Users/dzemilkarisik/Desktop/React/18-router-practice/frontend/src/pages/EventDetail.jsx"],"sourcesContent":["\nimport { useLoaderData } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nexport default function EventDetail () {\nconst data = useLoaderData()\n\n    \n    return (\n        <>\n            <EventItem event={data.event}/>\n        </>\n    )\n}\n\nexport async function loader ( {reques, params} ) {\n    const id = params.eventId;\n\n    const response = await fetch('http://localhost:8080/events/' + id);\n\n    if(!response.ok){\n        throw new Response(JSON.stringify({message: 'Could not fetch events.'}, {status: 500}));\n    }else{\n        return response;\n    }\n}"],"mappings":";;AACA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAChD,eAAe,SAASC,WAAWA,CAAA,EAAI;EAAAC,EAAA;EACvC,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAGxB,oBACIG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACIN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBACjC,CAAC;AAEX;AAACP,EAAA,CATuBD,WAAW;EAAA,QACtBN,aAAa;AAAA;AAAAe,EAAA,GADFT,WAAW;AAWnC,OAAO,eAAeU,MAAMA,CAAG;EAACC,MAAM;EAAEC;AAAM,CAAC,EAAG;EAC9C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAC;IACZ,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAACC,OAAO,EAAE;IAAyB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC,CAAC;EAC3F,CAAC,MAAI;IACD,OAAOP,QAAQ;EACnB;AACJ;AAAC,IAAAN,EAAA;AAAAc,YAAA,CAAAd,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}