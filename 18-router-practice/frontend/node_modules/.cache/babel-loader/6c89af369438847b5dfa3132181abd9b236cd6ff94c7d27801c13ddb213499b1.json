{"ast":null,"code":"var _jsxFileName = \"/Users/dzemilkarisik/Desktop/React/18-router-practice/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport EventsPage from './pages/EventsPage';\nimport EventDetail from './pages/EventDetail';\nimport NewEvent from './pages/NewEvent';\nimport EditEvent from './pages/EditEvent';\nimport RootLayout from './pages/Root';\nimport EventsRootLayout from './pages/EventsRoot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 26\n    }, this),\n    children: [{\n      path: '/',\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }, this)\n    }, {\n      path: 'events',\n      element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 34\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }, this),\n        loader: async () => {}\n      }, {\n        path: ':eventId',\n        element: /*#__PURE__*/_jsxDEV(EventDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 38\n        }, this)\n      }, {\n        path: 'new',\n        element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }, this)\n      }, {\n        path: ':eventId/edit',\n        element: /*#__PURE__*/_jsxDEV(EditEvent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 43\n        }, this)\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","HomePage","EventsPage","EventDetail","NewEvent","EditEvent","RootLayout","EventsRootLayout","jsxDEV","_jsxDEV","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","loader","_c","$RefreshReg$"],"sources":["/Users/dzemilkarisik/Desktop/React/18-router-practice/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { RouterProvider, createBrowserRouter} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport EventsPage from './pages/EventsPage';\nimport EventDetail from './pages/EventDetail';\nimport NewEvent from './pages/NewEvent';\nimport EditEvent from './pages/EditEvent';\nimport RootLayout from './pages/Root';\nimport EventsRootLayout from './pages/EventsRoot';\n\nfunction App() {\n\n  const router = createBrowserRouter([\n    {path: '/', element: <RootLayout />, children: [\n      { path: '/', element: <HomePage />},\n      { path: 'events', element: <EventsRootLayout />, children: [\n        { index: true, element: <EventsPage />, loader: async () => {\n          \n        }},\n        { path: ':eventId', element: <EventDetail />},\n        { path: 'new', element: <NewEvent />},\n        { path: ':eventId/edit', element: <EditEvent />},\n      ]},\n    ]}\n\n  ])\n\n  return <RouterProvider router={router}/>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAc,EAAEC,mBAAmB,QAAO,kBAAkB;AACrE,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,GAAGA,CAAA,EAAG;EAEb,MAAMC,MAAM,GAAGX,mBAAmB,CAAC,CACjC;IAACY,IAAI,EAAE,GAAG;IAAEC,OAAO,eAAEJ,OAAA,CAACH,UAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAEC,QAAQ,EAAE,CAC7C;MAAEN,IAAI,EAAE,GAAG;MAAEC,OAAO,eAAEJ,OAAA,CAACR,QAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,CAAC,EACnC;MAAEL,IAAI,EAAE,QAAQ;MAAEC,OAAO,eAAEJ,OAAA,CAACF,gBAAgB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAAEC,QAAQ,EAAE,CACzD;QAAEC,KAAK,EAAE,IAAI;QAAEN,OAAO,eAAEJ,OAAA,CAACP,UAAU;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAAEG,MAAM,EAAE,MAAAA,CAAA,KAAY,CAE5D;MAAC,CAAC,EACF;QAAER,IAAI,EAAE,UAAU;QAAEC,OAAO,eAAEJ,OAAA,CAACN,WAAW;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,CAAC,EAC7C;QAAEL,IAAI,EAAE,KAAK;QAAEC,OAAO,eAAEJ,OAAA,CAACL,QAAQ;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,CAAC,EACrC;QAAEL,IAAI,EAAE,eAAe;QAAEC,OAAO,eAAEJ,OAAA,CAACJ,SAAS;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,CAAC;IACjD,CAAC;EACH,CAAC,CAEH,CAAC;EAEF,oBAAOR,OAAA,CAACV,cAAc;IAACY,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC1C;AAACI,EAAA,GAlBQX,GAAG;AAoBZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}