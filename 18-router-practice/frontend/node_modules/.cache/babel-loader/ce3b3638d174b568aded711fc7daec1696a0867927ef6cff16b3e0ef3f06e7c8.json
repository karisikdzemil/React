{"ast":null,"code":"var _jsxFileName = \"/Users/dzemilkarisik/Desktop/React/18-router-practice/frontend/src/pages/NewEvent.jsx\";\nimport EventForm from \"../components/EventForm\";\nimport { redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewEvent() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n}\n_c = NewEvent;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response) if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not save event.'\n    }, {\n      status: 500\n    }));\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEvent\");","map":{"version":3,"names":["EventForm","redirect","jsxDEV","_jsxDEV","NewEvent","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","Response","message","status","$RefreshReg$"],"sources":["/Users/dzemilkarisik/Desktop/React/18-router-practice/frontend/src/pages/NewEvent.jsx"],"sourcesContent":["import EventForm from \"../components/EventForm\";\nimport { redirect } from \"react-router-dom\";\n\nexport default function NewEvent () {\n    return <EventForm />  \n}\n\nexport async function action ( {request, params} ) {\n    const data = await request.formData();\n    const eventData = {\n        title: data.get('title'),\n        image: data.get('image'),\n        date: data.get('date'),\n        description: data.get('description'),\n\n    }\n    const response = await fetch('http://localhost:8080/events', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(eventData)\n    });\n\n    if(!response)\n\n    if(!response.ok){\n        throw new Response(JSON.stringify({message: 'Could not save event.'}, {status: 500}));\n    }\n    return redirect('/events')\n}"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,QAAQA,CAAA,EAAI;EAChC,oBAAOD,OAAA,CAACH,SAAS;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxB;AAACC,EAAA,GAFuBL,QAAQ;AAIhC,OAAO,eAAeM,MAAMA,CAAG;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAG;EAC/C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EAEvC,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EAEF,IAAG,CAACM,QAAQ,EAEZ,IAAG,CAACA,QAAQ,CAACO,EAAE,EAAC;IACZ,MAAM,IAAIC,QAAQ,CAACH,IAAI,CAACC,SAAS,CAAC;MAACG,OAAO,EAAE;IAAuB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC,CAAC;EACzF;EACA,OAAO9B,QAAQ,CAAC,SAAS,CAAC;AAC9B;AAAC,IAAAQ,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}