{"ast":null,"code":"var _jsxFileName = \"/Users/dzemilkarisik/Desktop/React/18-router-practice/frontend/src/pages/EventsPage.jsx\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  //   if(data.isError){\n  //     return <p>{data.message}</p>\n  //   }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return {isError: true, message: 'Could not fetch events.'}\n    throw new Response(JSON.stringify({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    }));\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","Response","JSON","stringify","message","status","$RefreshReg$"],"sources":["/Users/dzemilkarisik/Desktop/React/18-router-practice/frontend/src/pages/EventsPage.jsx"],"sourcesContent":["import { useLoaderData, json } from \"react-router-dom\";\n\nimport EventsList from \"../components/EventsList\";\n\nfunction EventsPage() {\n  const data = useLoaderData();\n//   if(data.isError){\n//     return <p>{data.message}</p>\n//   }\n    const events = data.events;\n\n  return (\n    <>\n      <EventsList events={events} />\n    </>\n  );\n}\nexport default EventsPage;\n\nexport async function loader() {\n    const response = await fetch('http://localhost:8080/events');\n\n    if (!response.ok) {\n        // return {isError: true, message: 'Could not fetch events.'}\n        throw new Response(JSON.stringify({message: 'Could not fetch events.'}, {status: 500}));\n    } else {\n     return response;\n    }\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAEtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGT,aAAa,CAAC,CAAC;EAC9B;EACA;EACA;EACI,MAAMU,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE5B,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACF,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACP,EAAA,CAZQD,UAAU;EAAA,QACJP,aAAa;AAAA;AAAAgB,EAAA,GADnBT,UAAU;AAanB,eAAeA,UAAU;AAEzB,OAAO,eAAeU,MAAMA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;IACA,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAACC,OAAO,EAAE;IAAyB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC,CAAC;EAC3F,CAAC,MAAM;IACN,OAAOP,QAAQ;EAChB;AACJ;AAAC,IAAAF,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}