{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://reduxpracticing-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Seccess...',\n        message: 'Sending cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","sendCartData","cart","dispatch","showNotification","status","title","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error"],"sources":["/Users/dzemilkarisik/Desktop/React/16-redux-advance/src/store/card-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\n\n\nexport const sendCartData = (cart) => {\n    return async (dispatch) => {\n    dispatch(uiActions.showNotification({\n         status: 'pending',\n         title: 'Sending...',\n         message: 'Sending cart data!'\n       }));\n\n       const sendRequest = async () => {\n        const response = await fetch('https://reduxpracticing-default-rtdb.firebaseio.com/cart.json', {\n            method: 'PUT',\n            body: JSON.stringify(cart)\n          });\n        \n          if(!response.ok){\n            throw new Error('Sending cart data failed.')\n          }\n       }\n\n       try{\n           await sendRequest();\n           dispatch(uiActions.showNotification({\n            status: 'success',\n            title: 'Seccess...',\n            message: 'Sending cart data successfully!'\n          }))\n       }catch(error) {\n        dispatch(uiActions.showNotification({\n            status: 'error',\n            title: 'Error...',\n            message: 'Sending cart data failed!'\n          }))\n       }\n       \n        \n}\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AAGtC,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOC,QAAQ,IAAK;IAC3BA,QAAQ,CAACH,SAAS,CAACI,gBAAgB,CAAC;MAC/BC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CAAC,CAAC;IAEH,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+DAA+D,EAAE;QAC1FC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAG,CAACO,QAAQ,CAACM,EAAE,EAAC;QACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACH,CAAC;IAED,IAAG;MACC,MAAMR,WAAW,CAAC,CAAC;MACnBL,QAAQ,CAACH,SAAS,CAACI,gBAAgB,CAAC;QACnCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,YAAY;QACnBC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACN,CAAC,QAAMU,KAAK,EAAE;MACbd,QAAQ,CAACH,SAAS,CAACI,gBAAgB,CAAC;QAChCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACN;EAGP,CAAC;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}